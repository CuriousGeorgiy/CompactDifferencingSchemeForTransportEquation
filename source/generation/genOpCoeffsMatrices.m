function opCoeffsMatrices = genOpCoeffsMatrices(opsCoeffs, N)
        opCoeffs = {'l', 'm', 'r'};
        
        MA = genOpCoeffsMatrix(containers.Map(opCoeffs,...
                                              [opsCoeffs('a1'),...
                                               opsCoeffs('b1'),...
                                               opsCoeffs('c1')],...
                                               'UniformValues', true),...
                               N);
        MB = genOpCoeffsMatrix(containers.Map(opCoeffs,...
                                              [opsCoeffs('a0'),...
                                               opsCoeffs('b0'),...
                                               opsCoeffs('c0')],...
                                               'UniformValues', true),...
                               N);
                       
        opCoeffsMatrices = containers.Map({'A', 'B'},...
                                           {MA, MB});
end

function M = genOpCoeffsMatrix(opCoeffs, N)
        shiftedLeastResidueSysModSize = mod((0:N-1).' + (-1:1), N) + 1;
        
        M = sparse(repmat((1:N).', 1, 3), shiftedLeastResidueSysModSize,...
                   [opCoeffs('l') opCoeffs('m') opCoeffs('r')] .* ones(N,1));
end
